import renpy# Could use a better name...class Persistent_manager():  def __init__(self, inventory, journal_manager):    file = open(renpy.loader.transfn("../persistent.txt"), "r")    items_line = file.readline()    entries_line = file.readline()    file.close()        # Goes through the inventory, unlocking any items that match the ids listed    # in persistent.txt    self.items = items_line.split("=")[1].split(",")    items = inventory.get_items()    for item in items:      if item.get_id() in self.items:        item.unlock()        # Same thing here, but for journals and their entries. Format is     #   entries = [journal id]:[entry id], ...    self.entries = entries_line.split("=")[1].split(",")    journals = journal_manager.get_journals()    for journal in journals:      entries = journal.get_entries()      for entry in entries:        s = journal.get_id() + ":" + entry.get_id()        if s in self.entries:          entry.unlock()          journal.unlock()